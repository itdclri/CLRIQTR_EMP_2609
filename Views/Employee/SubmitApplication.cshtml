@model CLRIQTR_EMP.Models.NewApplicationModel
@*@{
        ViewBag.Title = "New Application - Step 2";
        Layout = "~/Views/Shared/_Layout.cshtml";

        var typeOrder = new List<string>
    {
        "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X",
        "XI", "XII", "XIII", "XIV", "XV"
    };

        string lowerType = null;
        if (!string.IsNullOrEmpty(Model.QuarterType))
        {
            var idx = typeOrder.IndexOf(Model.QuarterType.Trim());
            if (idx > 0)
            {
                lowerType = typeOrder[idx - 1];
            }
        }

    }*@

@{
    bool isTypeV = Model.QuarterType == "V";
}

<style>
    .navbar-nav .nav-link.active {
        font-weight: bold;
        color: #0d6efd; /* Bootstrap primary color */
    }
</style>

<nav class="navbar navbar-expand navbar-light bg-light mb-4">
    <div class="container">
        <ul class="navbar-nav me-auto">
            <li class="nav-item">
                <a class="nav-link active" href="@Url.Action("Index", "Employee")">
                    <i class="bi bi-file-earmark-plus"></i> New Application
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" aria-current="page" href="@Url.Action("ViewDrafts", "Employee")">
                    <i class="bi bi-folder-fill"></i> My Applications
                </a>
            </li>
        </ul>

        <div class="d-flex align-items-center ms-auto">
            <div class="navbar-text me-3">
                <i class="bi bi-person-badge"></i> Employee Number : <b>@Session["EmpNo"]</b>
            </div>
        </div>

        <ul class="navbar-nav mb-0">
            <li class="nav-item">
                <a class="nav-link text-danger" style="font-size: 1.1rem;" href="@Url.Action("Logout", "Login")">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </a>
            </li>
        </ul>
    </div>
</nav>

<h2 class="mt-4 text-center">New Application</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card mt-4 shadow-sm p-4">
    @using (Html.BeginForm("SubmitApplication", "Employee", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ApplyingForQuarters)
        @Html.HiddenFor(m => m.ApplyingForScientistQuarters)
        @Html.HiddenFor(m => m.QtrAppNo)
        @Html.HiddenFor(m => m.SaQtrAppNo)

        <!-- Date of Application -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">Date of Application</label>
            <div class="col-md-6">
                <input type="text" readonly class="form-control-plaintext" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
            </div>
        </div>

        <!-- Type Eligible -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">Type Eligible</label>
            <div class="col-md-6">
                <input type="text" readonly class="form-control-plaintext" value="@Model.QuarterType" />
            </div>
        </div>

        <!-- Present Residence -->
        <div class="row mb-3 align-items-center">
            @Html.LabelFor(m => m.PresentResidence, "Present Place of Residence with Full Address", htmlAttributes: new { @class = "col-md-6 col-form-label fw-bold" })
            <div class="col-md-6">
                @Html.TextBoxFor(m => m.PresentResidence, new { @class = "form-control", placeholder = "Enter your present residence address" })
                @Html.ValidationMessageFor(m => m.PresentResidence, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Lower Type Interest -->



        if (isTypeV)
        {
            <div class="row mb-3 align-items-center">
                <label class="col-md-6 col-form-label fw-bold">
                    Whether interested for type IV (in case of applicants entitled for type V only)?<br />
                    If so, separate application for type V should be given
                </label>
                <div class="col-md-6">
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(
                                      m => m.InterestedForLowerType,
                                      "Interested",
                                      new { @class = "form-check-input", id = "lowerYes" }
                                  )
                        <label class="form-check-label fw-bold" for="lowerYes">Interested</label>
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(
                                      m => m.InterestedForLowerType,
                                      "Not Interested",
                                      new { @class = "form-check-input", id = "lowerNo" }
                                  )
                        <label class="form-check-label fw-bold" for="lowerNo">Not Interested</label>
                    </div>
                </div>
            </div>
        }



        <!-- Own House -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">Whether the applicant owns a house either in his / her own name or in the name of his / her spouse within the municipal limits of Chennai.</label>
            <div class="col-md-6">
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.OwnHouse, "Yes", new { @class = "form-check-input", id = "ownHouseYes" })
                    <label class="form-check-label fw-bold" for="ownHouseYes">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.OwnHouse, "No", new { @class = "form-check-input", id = "ownHouseNo" })
                    <label class="form-check-label fw-bold" for="ownHouseNo">No</label>
                </div>
            </div>
        </div>

        <!-- Own House Details -->
        <div id="ownHouseDetails" style="display:none; margin-left:20px;">
            <div class="row mb-3 align-items-center">
                @Html.LabelFor(m => m.OwnerName, "Owner's Name", htmlAttributes: new { @class = "col-md-6 col-form-label fw-bold" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.OwnerName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.OwnerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3 align-items-center">
                @Html.LabelFor(m => m.OwnerAddress, "Address", htmlAttributes: new { @class = "col-md-6 col-form-label fw-bold" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.OwnerAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.OwnerAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3 align-items-center">
                <label class="col-md-6 col-form-label fw-bold">Whether the house is let out?</label>
                <div class="col-md-6">
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(m => m.HouseLetOut, "Yes", new { @class = "form-check-input", id = "letOutYes" })
                        <label class="form-check-label fw-bold" for="letOutYes">Yes</label>
                    </div>
                    <div class="form-check form-check-inline">
                        @Html.RadioButtonFor(m => m.HouseLetOut, "No", new { @class = "form-check-input", id = "letOutNo" })
                        <label class="form-check-label fw-bold" for="letOutNo">No</label>
                    </div>
                </div>
            </div>
        </div>

        <!-- Rent Amount -->
        <div id="rentAmountDiv" style="display:none; margin-left:40px;">
            <div class="row mb-3 align-items-center">
                <label class="col-md-6 col-form-label fw-bold">If let out, monthly rent received</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.MonthlyRent, new { @class = "form-control", type = "number", min = "0" })
                    @Html.ValidationMessageFor(m => m.MonthlyRent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- Family Details -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">Details of Family member of the applicant as defined in Allotment Rule 2 (s)</label>
            <div class="col-md-6">
                <textarea  rows="3" type="text" readonly class="form-control-plaintext">@Model.FamilyDetails</textarea>
                
            </div>
        </div>

        <!-- Permanent or Temporary -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">State Whether Permanent or Temporary</label>
            <div class="col-md-6">
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.PermanentOrTemporary, "Permanent", new { @class = "form-check-input", id = "permRadio" })
                    <label class="form-check-label fw-bold" for="permRadio">Permanent</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.PermanentOrTemporary, "Temporary", new { @class = "form-check-input", id = "tempRadio" })
                    <label class="form-check-label fw-bold" for="tempRadio">Temporary</label>
                </div>
            </div>
        </div>

        <!-- Surety Details -->
        <div id="suretyDetails" style="display:none; margin-left:20px;">
            <label class="fw-bold mb-2">If Temporary and less than 3 years service, enter surety details:</label>
            <div class="row mb-3 align-items-center">
                <label class="col-md-6 col-form-label fw-bold">Name of Surety</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.SuretyName, new { @class = "form-control", placeholder = "Name of Surety" })
                    @Html.ValidationMessageFor(m => m.SuretyName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3 align-items-center">
                <label class="col-md-6 col-form-label fw-bold">Present Designation</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.SuretyDesignation, new { @class = "form-control", placeholder = "Present Designation" })
                    @Html.ValidationMessageFor(m => m.SuretyDesignation, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row mb-3 align-items-center">
                <label class="col-md-6 col-form-label fw-bold">Permanent Post Held</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.SuretyPermanentPost, new { @class = "form-control", placeholder = "Permanent Post Held" })
                    @Html.ValidationMessageFor(m => m.SuretyPermanentPost, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!-- Services Essential -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">Have your services been declared essential?</label>
            <div class="col-md-6">
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.ServicesEssential, "Yes", new { @class = "form-check-input", id = "essYes" })
                    <label class="form-check-label fw-bold" for="essYes">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.ServicesEssential, "No", new { @class = "form-check-input", id = "essNo" })
                    <label class="form-check-label fw-bold" for="essNo">No</label>
                </div>
            </div>
        </div>

        <!-- Common Cadre Officer -->
        <div class="row mb-3 align-items-center">
            <label class="col-md-6 col-form-label fw-bold">Are you a Common Cadre Officer?</label>
            <div class="col-md-6">
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.IsCommonCadreOfficer, "Yes", new { @class = "form-check-input", id = "ccoYes" })
                    <label class="form-check-label fw-bold" for="ccoYes">Yes</label>
                </div>
                <div class="form-check form-check-inline">
                    @Html.RadioButtonFor(m => m.IsCommonCadreOfficer, "No", new { @class = "form-check-input", id = "ccoNo" })
                    <label class="form-check-label fw-bold" for="ccoNo">No</label>
                </div>
            </div>
        </div>

        if (Model.ShowDisabilityFields)
        {
            <div class="row mb-3 align-items-center">
                @Html.LabelFor(m => m.NatureOfDisability, "Nature of Disability", htmlAttributes: new { @class = "col-md-6 col-form-label fw-bold" })
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.NatureOfDisability, new { @class = "form-control", placeholder = "Specify the nature of your disability" })
                    @Html.ValidationMessageFor(m => m.NatureOfDisability, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        @Html.HiddenFor(m => m.QtrAppNo)

        var isDraft = string.IsNullOrEmpty(Model.AppStatus) || Model.AppStatus == "D";
        var isFirstTime = string.IsNullOrEmpty(Model.QtrAppNo);

        <br />

        <div class="d-flex justify-content-center gap-2">
            @if (isFirstTime)
            {
                <button type="submit" name="action" value="SaveAsDraft" class="btn btn-primary px-5">Save as Draft</button>
            }
            else
            {
                <button type="submit" name="action" value="SaveAsDraft" class="btn btn-primary px-5">Save as Draft</button>
                <button type="submit" name="action" value="Submit" class="btn btn-success px-5">Submit Application</button>
            }
        </div>
    }
</div>

@section scripts {
    <script>
        function toggleOwnHouseDetails() {
            var ownHouseYes = document.getElementById('ownHouseYes');
            var detailsDiv = document.getElementById('ownHouseDetails');
            detailsDiv.style.display = (ownHouseYes && ownHouseYes.checked) ? 'block' : 'none';
            if (!(ownHouseYes && ownHouseYes.checked)) {
                document.getElementById('rentAmountDiv').style.display = 'none';
            }
        }

        function toggleRentAmount() {
            var letOutYes = document.getElementById('letOutYes');
            var rentDiv = document.getElementById('rentAmountDiv');
            rentDiv.style.display = (letOutYes && letOutYes.checked) ? 'block' : 'none';
        }

        function toggleSuretyDetails() {
            var tempRadio = document.getElementById('tempRadio');
            var suretyDiv = document.getElementById('suretyDetails');
            suretyDiv.style.display = (tempRadio && tempRadio.checked) ? 'block' : 'none';
        }

        document.addEventListener('DOMContentLoaded', function () {
            toggleOwnHouseDetails();
            toggleRentAmount();
            toggleSuretyDetails();

            document.getElementById('ownHouseYes').addEventListener('change', toggleOwnHouseDetails);
            document.getElementById('ownHouseNo').addEventListener('change', toggleOwnHouseDetails);
            document.getElementById('letOutYes').addEventListener('change', toggleRentAmount);
            document.getElementById('letOutNo').addEventListener('change', toggleRentAmount);
            document.getElementById('tempRadio').addEventListener('change', toggleSuretyDetails);
            document.getElementById('permRadio').addEventListener('change', toggleSuretyDetails);
        });
    </script>
}
